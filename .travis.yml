language: go

sudo: false

go:
  - 1.5
  - 1.6

addons:
  postgresql: "9.4"

services:
  - redis-server

cache:
  directories:
    - $HOME/.cache
    - Godeps/_workspace

go_import_path: github.com/skygeario/skygear-server

before_install:
  - mkdir -p $HOME/.cache/local
  - export LD_INSTALL_PREFIX=$HOME/.cache/local
  - export LD_LIBRARY_PATH=$LD_INSTALL_PREFIX/lib:$LD_LIBRARY_PATH
  - export LIBRARY_PATH=$LD_INSTALL_PREFIX/lib:$LIBRARY_PATH
  - export PKG_CONFIG_PATH=$LD_INSTALL_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH
  - mkdir -p $LD_INSTALL_PREFIX/src
  - pushd $LD_INSTALL_PREFIX/src
  - $TRAVIS_BUILD_DIR/scripts/build-git-lib.sh git://github.com/jedisct1/libsodium.git 1.0.5
  - $TRAVIS_BUILD_DIR/scripts/build-git-lib.sh git://github.com/zeromq/zeromq4-1.git v4.1.3
  - $TRAVIS_BUILD_DIR/scripts/build-git-lib.sh git://github.com/zeromq/czmq.git v3.0.2
  - popd
  - ./scripts/if-differ.sh Godeps/Godeps.json $HOME/.cache/Godeps.json rm -rf Godeps/_workspace

before_script:
  - psql -c 'CREATE DATABASE skygear_test;' -U postgres
  - psql -c 'CREATE EXTENSION postgis;' -U postgres -d skygear_test
  - >
    go get golang.org/x/tools/cmd/stringer \
           golang.org/x/tools/cmd/cover \
           github.com/golang/lint/golint \
           github.com/smartystreets/goconvey/convey \
           github.com/smartystreets/assertions \
           github.com/rickmak/gocyclo \
           github.com/oursky/gogocyclo \
           github.com/jarcoal/httpmock

script:
  - golint ./... | grep -v -f .golint.exclude; test $? -eq 1
  - go generate ./...
  - git status | grep "_string.go$"; test $? -eq 1
  - gocyclo -skip-godeps -over 15 . | gogocyclo
  - go test --tags zmq -cover ./...
  - >
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] &&
       ([[ "$TRAVIS_BRANCH" == "$BINARY_BUILDING_BRANCH" ]] ||
        [[ -n $TRAVIS_TAG ]])
    then
      ./scripts/build-binary.sh;
    fi
  - >
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] &&
       ([[ "$TRAVIS_BRANCH" == "$BINARY_BUILDING_BRANCH" ]] ||
        [[ -n $TRAVIS_TAG ]])
    then
      ./scripts/upload-binary.sh;
    fi

deploy:
  provider: releases
  api-key: "$GITHUB_RELEASE_TOKEN"
  file:
    - "dist/skygear-server-darwin-386"
    - "dist/skygear-server-darwin-amd64"
    - "dist/skygear-server-linux-386"
    - "dist/skygear-server-linux-amd64"
    - "dist/skygear-server-windows-386"
    - "dist/skygear-server-windows-amd64"
    - "dist/skygear-server-zmq-linux-amd64"
  skip_cleanup: true
  on:
    tags: true

notifications:
  slack: oursky:PxqsclRADehuWEs51vpgxeUh

env:
  global:
    - BINARY_BUILDING_BRANCH="master"
    - secure: qyXOofEQ4RW03vzqh6UpB2HrZpD2B6nc4TJR/As9LqLNBpkWXOSfaH09jrGQTyTr1LA+53RI/2yxIwO3ZAvyP0RjHe2bHBwKz/2uUhwQWJGrqC+GAzt/V/oVjr1ZyF7FOSOnQzgvU35ek1lHhHiCclJJKnUdQRQJPpSBH21z9HU=
    - secure: v8KtjBrM8HXFQDxgUviMYRox0zQwXF7E+4vKAvUmtJLW9l6Cm5hyg0qFWfK00gB6qfcUU9wjx6A9FxzJh+YXZk2u/bgRdO/japW+a92UkNsGcNQvmTfjz4qjiCNSoci+3QsJEHdaF81d9XVQCa9h9uatkkr0SqVcHfYKx+0DjY4=
