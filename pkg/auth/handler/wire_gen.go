// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package handler

import (
	"github.com/google/wire"
	"github.com/skygeario/skygear-server/pkg/core/config"
	"net/http"
)

// Injectors from wire.go:

func InjectFoobar(r *http.Request) *Foobar {
	tenantConfiguration := ProvideTenantConfig(r)
	foobar := NewFoobar(tenantConfiguration)
	return foobar
}

// wire.go:

// ProvideTenantConfig provides pointer to TenantConfiguration
// Some existing code requires the struct, so in later refactoring
// we have to convert the dependency to use pointer first.
func ProvideTenantConfig(r *http.Request) *config.TenantConfiguration {
	return config.GetTenantConfig(r.Context())
}

var DefaultSet = wire.NewSet(
	ProvideTenantConfig,
)

type Foobar struct{}

func NewFoobar(tConfig *config.TenantConfiguration) *Foobar {
	return &Foobar{}
}
