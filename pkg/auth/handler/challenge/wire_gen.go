// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package challenge

import (
	"github.com/skygeario/skygear-server/pkg/auth"
	"github.com/skygeario/skygear-server/pkg/auth/dependency/challenge"
	"github.com/skygeario/skygear-server/pkg/core/time"
	"net/http"
)

// Injectors from wire.go:

func newCreateHandler(r *http.Request, m auth.DependencyMap) http.Handler {
	validator := auth.ProvideValidator(m)
	context := auth.ProvideContext(r)
	provider := time.NewProvider()
	tenantConfiguration := auth.ProvideTenantConfig(context, m)
	provider2 := challenge.ProvideProvider(context, provider, tenantConfiguration)
	createHandler := &CreateHandler{
		Validator:  validator,
		Challenges: provider2,
	}
	handler := provideCreateHandler(createHandler)
	return handler
}

// wire.go:

func provideCreateHandler(h *CreateHandler) http.Handler {
	return h
}
